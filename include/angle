// vim: set ft=cpp:

#pragma once

#include "impl/unit_container"
#include "impl/unit_definition"
#include "impl/util"

#include <mooncat/units/length>

#include <cstdint>
#include <numbers>
#include <ratio>

namespace lmc::units::angle
{

constexpr std::intmax_t pi_num = 353981633974483;
constexpr std::intmax_t pi_den = 2500000000000000;

using pi_ratio = std::ratio_add<std::ratio<3>, std::ratio<pi_num, pi_den>>;

using radians  = impl::cnt::unit_container<impl::def::definition_divide<
    length::meters::definition,
    length::meters::definition>>;

using turns
    = impl::abbr::derive<std::ratio_multiply<std::ratio<2>, pi_ratio>, radians>;

using degrees = impl::abbr::derive<std::ratio<1, 360>, turns>;

constexpr radians r { std::numbers::pi_v<long double> * 2.0L };
constexpr turns   t { r };
constexpr degrees d { r };

constexpr auto    x = t.get_measurement();
constexpr auto    y = r.get_measurement();
constexpr auto    z = d.get_measurement();
} // namespace lmc::units::angle
